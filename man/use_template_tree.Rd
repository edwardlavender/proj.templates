% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/use-template.R
\name{use_template_tree}
\alias{use_template_tree}
\title{Use a template directory tree}
\usage{
use_template_tree(
  root = rprojroot::find_rstudio_root_file(),
  tree = NULL,
  ignore = c(".git", ".Rproj.user", "renv", "docs", "deprecated"),
  save = NULL,
  recreate = ifelse(is.null(tree), FALSE, TRUE)
)
}
\arguments{
\item{root}{A string that defines the project root (within which directories are identified or recreated).}

\item{tree}{A list of directories. If \code{NULL}, the directories in \code{root} (excluding \code{ignore} patterns) are recursively listed (see \code{\link[=list.dirs]{list.dirs()}}).}

\item{ignore}{(optional) If \code{tree = NULL}, \code{ignore} is a character vector of patterns that are ignored (see \code{\link[stringr:str_detect]{stringr::str_detect()}}). \code{NULL} suppresses this argument.}

\item{save}{(optional) A file path used to save the \code{tree} (see \code{\link[=saveRDS]{saveRDS()}}).}

\item{recreate}{A logical variable that defines whether or not to recreate the \code{tree} locally. If \code{TRUE}, any directories in \code{tree} that do not exist are created (see \code{\link[=dir.create]{dir.create()}}).}
}
\value{
The function returns either:
\itemize{
\item A list of file path components, if \code{recreate = FALSE}
\item A logical vector that defines whether or not each directory was successfully recreated, if \code{tree} is supplied and \code{recreate = TRUE}
}

If \code{save} is supplied, the tree list is also written to file.
}
\description{
This function lists and/or recreates the system of directories (termed the 'directory tree') in a project.
}
\details{
This function was motivated by the need to recreate project directories for RStudio Projects shared via GitHub. Typically, GitHub repositories do not contain all folders used by a project. This function is designed to be called to (a) list and save the list of directories used by a project locally such that (b) the directory system can be recreated on another machine. This is especially useful for stand-alone projects. For non-stand-alone projects, external files may need to be added into recreated directories for \code{R} code to run.

The function uses a two-stage approach to list directories. First, the function lists all top-level directories, dropping any that contain an \code{ignore} pattern. For each remaining top-level directory, all sub-directories are recursively listed. Any sub-directories that contain an \code{ignore} pattern are dropped. This two-stage approach is typically quicker than listing all directories recursively in the first instance within RStudio Projects because the default ignored directories such as '.git' and 'renv' can contain many sub-directories.
}
\examples{
#### Set up example
# Create a blank project
proj <- file.path(tempdir(), "tmp")
usethis::create_project(proj, open = FALSE)
use_template_proj(proj)
# Add some additional files
dir.create(file.path(proj, "data", "a"))
dir.create(file.path(proj, "data", "b"))
dir.create(file.path(proj, "data", "ignore"))

#### Example (1): Generating a tree for a project
# Generate tree using default options
(use_template_tree(root = proj))
# Ignore certain directories
(use_template_tree(root = proj, ignore = "ignore"))
# Save the tree
tree_path <- file.path(proj, "data", "inst", "tree.rds")
(use_template_tree(root = proj, save = tree_path))
file.exists(tree_path)

#### Example (2): Recreate the tree in a new project
# Define a new (blank) project
new <- file.path(tempdir(), "new")
usethis::create_project(new, open = FALSE)
# Read the tree from the old project
tree <- readRDS(tree_path)
# Save and recreate the tree in the new project
dir.create(file.path(new, "data", "proj.templates"), recursive = TRUE)
success <- use_template_tree(
  root = new,
  tree = tree,
  save = file.path(new, "data", "proj.templates", "tree.rds"),
  recreate = TRUE
)
# The tree now exists in the new path
file.exists(file.path(new, "data", "proj.templates", "tree.rds"))
# Examine the logical vector that defines whether or not each tree element
# ... was created
success
# List directories in new project
list.dirs(new, full.names = FALSE, recursive = TRUE)

}
\seealso{
\code{\link[=use_template_proj]{use_template_proj()}}, \code{\link[=use_template_gitignore]{use_template_gitignore()}}, \code{\link[=use_template_readme]{use_template_readme()}}, \code{\link[=use_template_script]{use_template_script()}}, \code{\link[=use_template_tree]{use_template_tree()}}
}
\author{
Edward Lavender
}
